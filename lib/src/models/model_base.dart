/*
 * --------------------------------------------------------------------------------
 * <copyright company="Aspose" file="model_base.dart">
 *   Copyright (c) 2024 Aspose.Words for Cloud
 * </copyright>
 * <summary>
 *   Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 * 
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 * 
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  SOFTWARE.
 * </summary>
 * --------------------------------------------------------------------------------
 */

library aspose_words_cloud;

import '../../aspose_words_cloud.dart';

abstract class ModelBase {
  void deserialize(Map<String, dynamic>? json);
  Map<String, dynamic> serialize();
  void getFilesContent(List<FileReference> resultFilesContent);
  void validate();

  static final Map<String, ModelBase Function()> _modelsFactory = <String, ModelBase Function()> {
    'ApiError, _': () => ApiError(),
    'AvailableFontsResponse, _': () => AvailableFontsResponse(),
    'BmpSaveOptionsData, _': () => BmpSaveOptionsData(),
    'Bookmark, _': () => Bookmark(),
    'BookmarkData, _': () => BookmarkData(),
    'BookmarkInsert, _': () => BookmarkInsert(),
    'BookmarkResponse, _': () => BookmarkResponse(),
    'Bookmarks, _': () => Bookmarks(),
    'BookmarksOutlineLevelData, _': () => BookmarksOutlineLevelData(),
    'BookmarksResponse, _': () => BookmarksResponse(),
    'Border, _': () => Border(),
    'BorderResponse, _': () => BorderResponse(),
    'BordersCollection, _': () => BordersCollection(),
    'BordersResponse, _': () => BordersResponse(),
    'ClassificationResponse, _': () => ClassificationResponse(),
    'ClassificationResult, _': () => ClassificationResult(),
    'Comment, _': () => Comment(),
    'CommentInsert, _': () => CommentInsert(),
    'CommentLink, _': () => CommentLink(),
    'CommentResponse, _': () => CommentResponse(),
    'CommentsCollection, _': () => CommentsCollection(),
    'CommentsResponse, _': () => CommentsResponse(),
    'CommentUpdate, _': () => CommentUpdate(),
    'CompareData, _': () => CompareData(),
    'CompareOptions, _': () => CompareOptions(),
    'CompressOptions, _': () => CompressOptions(),
    'CompressResponse, _': () => CompressResponse(),
    'CsvDataLoadOptions, _': () => CsvDataLoadOptions(),
    'CustomXmlPart, _': () => CustomXmlPart(),
    'CustomXmlPartInsert, _': () => CustomXmlPartInsert(),
    'CustomXmlPartLink, _': () => CustomXmlPartLink(),
    'CustomXmlPartResponse, _': () => CustomXmlPartResponse(),
    'CustomXmlPartsCollection, _': () => CustomXmlPartsCollection(),
    'CustomXmlPartsResponse, _': () => CustomXmlPartsResponse(),
    'CustomXmlPartUpdate, _': () => CustomXmlPartUpdate(),
    'DocmSaveOptionsData, _': () => DocmSaveOptionsData(),
    'DocSaveOptionsData, _': () => DocSaveOptionsData(),
    'Document, _': () => Document(),
    'DocumentEntry, _': () => DocumentEntry(),
    'DocumentEntryList, _': () => DocumentEntryList(),
    'DocumentPosition, _': () => DocumentPosition(),
    'DocumentProperties, _': () => DocumentProperties(),
    'DocumentPropertiesResponse, _': () => DocumentPropertiesResponse(),
    'DocumentProperty, _': () => DocumentProperty(),
    'DocumentPropertyCreateOrUpdate, _': () => DocumentPropertyCreateOrUpdate(),
    'DocumentPropertyResponse, _': () => DocumentPropertyResponse(),
    'DocumentResponse, _': () => DocumentResponse(),
    'DocumentStatData, _': () => DocumentStatData(),
    'DocxSaveOptionsData, _': () => DocxSaveOptionsData(),
    'DotmSaveOptionsData, _': () => DotmSaveOptionsData(),
    'DotSaveOptionsData, _': () => DotSaveOptionsData(),
    'DotxSaveOptionsData, _': () => DotxSaveOptionsData(),
    'DownsampleOptionsData, _': () => DownsampleOptionsData(),
    'DrawingObject, _': () => DrawingObject(),
    'DrawingObjectCollection, _': () => DrawingObjectCollection(),
    'DrawingObjectInsert, _': () => DrawingObjectInsert(),
    'DrawingObjectLink, _': () => DrawingObjectLink(),
    'DrawingObjectResponse, _': () => DrawingObjectResponse(),
    'DrawingObjectsResponse, _': () => DrawingObjectsResponse(),
    'DrawingObjectUpdate, _': () => DrawingObjectUpdate(),
    'EmfSaveOptionsData, _': () => EmfSaveOptionsData(),
    'EpsSaveOptionsData, _': () => EpsSaveOptionsData(),
    'EpubSaveOptionsData, _': () => EpubSaveOptionsData(),
    'Error, _': () => Error(),
    'ErrorDetails, _': () => ErrorDetails(),
    'Field, _': () => Field(),
    'FieldCollection, _': () => FieldCollection(),
    'FieldInsert, _': () => FieldInsert(),
    'FieldLink, _': () => FieldLink(),
    'FieldNames, _': () => FieldNames(),
    'FieldNamesResponse, _': () => FieldNamesResponse(),
    'FieldOptions, _': () => FieldOptions(),
    'FieldResponse, _': () => FieldResponse(),
    'FieldsResponse, _': () => FieldsResponse(),
    'FieldUpdate, _': () => FieldUpdate(),
    'FileLink, _': () => FileLink(),
    'FilesList, _': () => FilesList(),
    'FilesUploadResult, _': () => FilesUploadResult(),
    'FlatOpcMacroSaveOptionsData, _': () => FlatOpcMacroSaveOptionsData(),
    'FlatOpcSaveOptionsData, _': () => FlatOpcSaveOptionsData(),
    'FlatOpcTemplateMacroSaveOptionsData, _': () => FlatOpcTemplateMacroSaveOptionsData(),
    'FlatOpcTemplateSaveOptionsData, _': () => FlatOpcTemplateSaveOptionsData(),
    'Font, _': () => Font(),
    'FontInfo, _': () => FontInfo(),
    'FontResponse, _': () => FontResponse(),
    'Footnote, _': () => Footnote(),
    'FootnoteCollection, _': () => FootnoteCollection(),
    'FootnoteInsert, _': () => FootnoteInsert(),
    'FootnoteLink, _': () => FootnoteLink(),
    'FootnoteResponse, _': () => FootnoteResponse(),
    'FootnotesResponse, _': () => FootnotesResponse(),
    'FootnotesStatData, _': () => FootnotesStatData(),
    'FootnoteUpdate, _': () => FootnoteUpdate(),
    'FormFieldCheckbox, _': () => FormFieldCheckbox(),
    'FormFieldCollection, _': () => FormFieldCollection(),
    'FormFieldDropDown, _': () => FormFieldDropDown(),
    'FormFieldResponse, _': () => FormFieldResponse(),
    'FormFieldsResponse, _': () => FormFieldsResponse(),
    'FormFieldTextInput, _': () => FormFieldTextInput(),
    'GifSaveOptionsData, _': () => GifSaveOptionsData(),
    'HeaderFooter, _': () => HeaderFooter(),
    'HeaderFooterLink, _': () => HeaderFooterLink(),
    'HeaderFooterLinkCollection, _': () => HeaderFooterLinkCollection(),
    'HeaderFooterResponse, _': () => HeaderFooterResponse(),
    'HeaderFootersResponse, _': () => HeaderFootersResponse(),
    'HtmlFixedSaveOptionsData, _': () => HtmlFixedSaveOptionsData(),
    'HtmlSaveOptionsData, _': () => HtmlSaveOptionsData(),
    'Hyperlink, _': () => Hyperlink(),
    'HyperlinkResponse, _': () => HyperlinkResponse(),
    'Hyperlinks, _': () => Hyperlinks(),
    'HyperlinksResponse, _': () => HyperlinksResponse(),
    'ImageEntry, _': () => ImageEntry(),
    'ImageEntryList, _': () => ImageEntryList(),
    'InfoAdditionalItem, _': () => InfoAdditionalItem(),
    'InfoResponse, _': () => InfoResponse(),
    'JpegSaveOptionsData, _': () => JpegSaveOptionsData(),
    'JsonDataLoadOptions, _': () => JsonDataLoadOptions(),
    'Link, _': () => Link(),
    'LinkElement, _': () => LinkElement(),
    'ListFormat, _': () => ListFormat(),
    'ListFormatUpdate, _': () => ListFormatUpdate(),
    'ListInfo, _': () => ListInfo(),
    'ListInsert, _': () => ListInsert(),
    'ListLevel, _': () => ListLevel(),
    'ListLevels, _': () => ListLevels(),
    'ListLevelUpdate, _': () => ListLevelUpdate(),
    'ListResponse, _': () => ListResponse(),
    'Lists, _': () => Lists(),
    'ListsResponse, _': () => ListsResponse(),
    'ListUpdate, _': () => ListUpdate(),
    'LoadWebDocumentData, _': () => LoadWebDocumentData(),
    'MarkdownSaveOptionsData, _': () => MarkdownSaveOptionsData(),
    'MetafileRenderingOptionsData, _': () => MetafileRenderingOptionsData(),
    'MhtmlSaveOptionsData, _': () => MhtmlSaveOptionsData(),
    'ModificationOperationResult, _': () => ModificationOperationResult(),
    'NodeLink, _': () => NodeLink(),
    'OdtSaveOptionsData, _': () => OdtSaveOptionsData(),
    'OfficeMathLink, _': () => OfficeMathLink(),
    'OfficeMathObject, _': () => OfficeMathObject(),
    'OfficeMathObjectResponse, _': () => OfficeMathObjectResponse(),
    'OfficeMathObjectsCollection, _': () => OfficeMathObjectsCollection(),
    'OfficeMathObjectsResponse, _': () => OfficeMathObjectsResponse(),
    'OpenXpsSaveOptionsData, _': () => OpenXpsSaveOptionsData(),
    'OptimizationOptions, _': () => OptimizationOptions(),
    'OttSaveOptionsData, _': () => OttSaveOptionsData(),
    'OutlineOptionsData, _': () => OutlineOptionsData(),
    'PageNumber, _': () => PageNumber(),
    'PageSetup, _': () => PageSetup(),
    'PageStatData, _': () => PageStatData(),
    'Paragraph, _': () => Paragraph(),
    'ParagraphFormat, _': () => ParagraphFormat(),
    'ParagraphFormatResponse, _': () => ParagraphFormatResponse(),
    'ParagraphFormatUpdate, _': () => ParagraphFormatUpdate(),
    'ParagraphInsert, _': () => ParagraphInsert(),
    'ParagraphLink, _': () => ParagraphLink(),
    'ParagraphLinkCollection, _': () => ParagraphLinkCollection(),
    'ParagraphLinkCollectionResponse, _': () => ParagraphLinkCollectionResponse(),
    'ParagraphListFormatResponse, _': () => ParagraphListFormatResponse(),
    'ParagraphResponse, _': () => ParagraphResponse(),
    'PclSaveOptionsData, _': () => PclSaveOptionsData(),
    'PdfDigitalSignatureDetailsData, _': () => PdfDigitalSignatureDetailsData(),
    'PdfEncryptionDetailsData, _': () => PdfEncryptionDetailsData(),
    'PdfPermissions, _': () => throw ApiException(400, 'Invalid type of class.'),
    'PdfSaveOptionsData, _': () => PdfSaveOptionsData(),
    'PngSaveOptionsData, _': () => PngSaveOptionsData(),
    'PositionAfterNode, _': () => PositionAfterNode(),
    'PositionBeforeNode, _': () => PositionBeforeNode(),
    'PositionInsideNode, _': () => PositionInsideNode(),
    'PreferredWidth, _': () => PreferredWidth(),
    'ProtectionData, _': () => ProtectionData(),
    'ProtectionDataResponse, _': () => ProtectionDataResponse(),
    'ProtectionRequest, _': () => ProtectionRequest(),
    'ProtectionRequestV2, _': () => ProtectionRequestV2(),
    'PsSaveOptionsData, _': () => PsSaveOptionsData(),
    'PublicKeyResponse, _': () => PublicKeyResponse(),
    'RangeDocument, _': () => RangeDocument(),
    'RangeTextResponse, _': () => RangeTextResponse(),
    'ReplaceRange, _': () => ReplaceRange(),
    'ReplaceTextParameters, _': () => ReplaceTextParameters(),
    'ReplaceTextResponse, _': () => ReplaceTextResponse(),
    'ReportBuildOptions, _': () => throw ApiException(400, 'Invalid type of class.'),
    'ReportEngineSettings, _': () => ReportEngineSettings(),
    'RevisionsModificationResponse, _': () => RevisionsModificationResponse(),
    'RtfSaveOptionsData, _': () => RtfSaveOptionsData(),
    'Run, _': () => Run(),
    'RunInsert, _': () => RunInsert(),
    'RunLink, _': () => RunLink(),
    'RunResponse, _': () => RunResponse(),
    'Runs, _': () => Runs(),
    'RunsResponse, _': () => RunsResponse(),
    'RunUpdate, _': () => RunUpdate(),
    'SaveResponse, _': () => SaveResponse(),
    'SaveResult, _': () => SaveResult(),
    'SearchResponse, _': () => SearchResponse(),
    'SearchResult, _': () => SearchResult(),
    'SearchResultsCollection, _': () => SearchResultsCollection(),
    'Section, _': () => Section(),
    'SectionLink, _': () => SectionLink(),
    'SectionLinkCollection, _': () => SectionLinkCollection(),
    'SectionLinkCollectionResponse, _': () => SectionLinkCollectionResponse(),
    'SectionPageSetupResponse, _': () => SectionPageSetupResponse(),
    'SectionResponse, _': () => SectionResponse(),
    'Shading, _': () => Shading(),
    'SplitDocumentResponse, _': () => SplitDocumentResponse(),
    'SplitDocumentResult, _': () => SplitDocumentResult(),
    'StatDataResponse, _': () => StatDataResponse(),
    'StorageFile, _': () => StorageFile(),
    'StoryChildNodes, _': () => StoryChildNodes(),
    'StructuredDocumentTag, _': () => StructuredDocumentTag(),
    'StructuredDocumentTagCollection, _': () => StructuredDocumentTagCollection(),
    'StructuredDocumentTagInsert, _': () => StructuredDocumentTagInsert(),
    'StructuredDocumentTagListItem, _': () => StructuredDocumentTagListItem(),
    'StructuredDocumentTagResponse, _': () => StructuredDocumentTagResponse(),
    'StructuredDocumentTagsResponse, _': () => StructuredDocumentTagsResponse(),
    'StructuredDocumentTagUpdate, _': () => StructuredDocumentTagUpdate(),
    'Style, _': () => Style(),
    'StyleApply, _': () => StyleApply(),
    'StyleCopy, _': () => StyleCopy(),
    'StyleInsert, _': () => StyleInsert(),
    'StyleResponse, _': () => StyleResponse(),
    'StylesResponse, _': () => StylesResponse(),
    'StyleUpdate, _': () => StyleUpdate(),
    'SvgSaveOptionsData, _': () => SvgSaveOptionsData(),
    'Table, _': () => Table(),
    'TableCell, _': () => TableCell(),
    'TableCellFormat, _': () => TableCellFormat(),
    'TableCellFormatResponse, _': () => TableCellFormatResponse(),
    'TableCellInsert, _': () => TableCellInsert(),
    'TableCellResponse, _': () => TableCellResponse(),
    'TableInsert, _': () => TableInsert(),
    'TableLink, _': () => TableLink(),
    'TableLinkCollection, _': () => TableLinkCollection(),
    'TableLinkCollectionResponse, _': () => TableLinkCollectionResponse(),
    'TableProperties, _': () => TableProperties(),
    'TablePropertiesResponse, _': () => TablePropertiesResponse(),
    'TableResponse, _': () => TableResponse(),
    'TableRow, _': () => TableRow(),
    'TableRowFormat, _': () => TableRowFormat(),
    'TableRowFormatResponse, _': () => TableRowFormatResponse(),
    'TableRowInsert, _': () => TableRowInsert(),
    'TableRowResponse, _': () => TableRowResponse(),
    'TabStop, _': () => TabStop(),
    'TabStopInsert, _': () => TabStopInsert(),
    'TabStopsResponse, _': () => TabStopsResponse(),
    'TextSaveOptionsData, _': () => TextSaveOptionsData(),
    'TiffSaveOptionsData, _': () => TiffSaveOptionsData(),
    'TimeZoneInfoData, _': () => TimeZoneInfoData(),
    'TranslateNodeIdResponse, _': () => TranslateNodeIdResponse(),
    'UserInformation, _': () => UserInformation(),
    'WatermarkDataImage, _': () => WatermarkDataImage(),
    'WatermarkDataText, _': () => WatermarkDataText(),
    'WatermarkText, _': () => WatermarkText(),
    'WordMLSaveOptionsData, _': () => WordMLSaveOptionsData(),
    'WordsApiErrorResponse, _': () => WordsApiErrorResponse(),
    'WordsApiLink, _': () => WordsApiLink(),
    'WordsResponse, _': () => WordsResponse(),
    'XamlFixedSaveOptionsData, _': () => XamlFixedSaveOptionsData(),
    'XamlFlowPackSaveOptionsData, _': () => XamlFlowPackSaveOptionsData(),
    'XamlFlowSaveOptionsData, _': () => XamlFlowSaveOptionsData(),
    'XmlColor, _': () => XmlColor(),
    'XmlDataLoadOptions, _': () => XmlDataLoadOptions(),
    'XpsSaveOptionsData, _': () => XpsSaveOptionsData()
  };

  static T? createInstance<T extends ModelBase>(Map<String, dynamic>? json)
  {
    if (json == null)
      return null;

    String classType = json['\$type'] ?? '$T, _';
    if (!_modelsFactory.containsKey(classType))
      throw new ApiException(400, 'Invalid class name $classType');

    var result = _modelsFactory[classType]!.call() as T;
    result.deserialize(json);
    return result;
  }
}